/**
@mainpage Tower of Hanoi Library


@section game_definition Game Definition

It consists of a finite set of **Rods** and **Disks**.
The rods are organized in a line and each disk has a
different diameter.

- **Start:** All the disks are organized in ascending diameter in the first rod.
- **Goal:** Move all the disks to the last rod.
- **Rules:**
  -# Only one disk can be moved at a time.
  -# Only the disks on top of each rod may be moved.
  -# Disks cannot be placed on top of smaller disks.


@section how_to_use How to Use

The representation of a Tower of Hanoi game is made
by the structure @ref TowerOfHanoi. The first step is
to create an instance of that structure and initialize
it. After that, the movements can be executed and,
at any point, the end of the game can be checked.

All the game manipulation functions are available
in the file @ref TowerOfHanoi.h


@section example Example - Creating and Solving a 3-disk Game

@code{.c}
#include <TowerOfHanoi.h>
int main(void)
{
    unsigned numberOfDisks, numberOfRods;
    MoveError moveStatus; /* Unused here */
    TowerOfHanoi th;

    /* Initialization */
    numberOfDisks = 3;
    numberOfRods = 3;
    initializeTowerOfHanoi(&th, numberOfDisks, numberOfRods)

    /* Solve Game */
    moveStatus = moveDisk(&th, 0, 2);
    moveStatus = moveDisk(&th, 1, 1);
    moveStatus = moveDisk(&th, 0, 1);
    moveStatus = moveDisk(&th, 2, 2);
    moveStatus = moveDisk(&th, 0, 0);
    moveStatus = moveDisk(&th, 1, 2);
    moveStatus = moveDisk(&th, 0, 2);

    return gameOverTowerOfHanoi(&th);
    /* 0 (true) because the game is over */
}
@endcode

*/